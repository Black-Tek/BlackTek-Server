services:

  database:
    container_name: database
    image: mariadb:latest
    restart: "no"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "/usr/bin/mysql", "--user=$$MYSQL_USER",  "--password=$$MYSQL_ROOT_PASSWORD", "--execute", "SHOW DATABASES;"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
    - '.env'
    networks:
      - tibia

  check-db-started:
    container_name: db-healthcheck
    image: jwilder/dockerize:0.6.1    
    env_file:
      - '.env'      
    depends_on:
      - database          
    command: 'dockerize -wait=tcp://database:3306 -timeout 30s'
    networks:
      - tibia

  migrate:
    container_name: migrations
    image: ghcr.io/tibia-oce/migrate:latest
    restart: "no"
    networks:
      - tibia
    depends_on:
      check-db-started:
        condition: service_completed_successfully
    env_file:
      - '.env'

  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RELEASE_ARCH: release_64
    restart: always
    ports:
      - 7171:7171
      - 7172:7172
    networks:
      - tibia
    env_file:
      - '.env'
    depends_on:
      migrate:
        condition: service_completed_successfully

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    restart: always
    env_file:
      - '.env'
    networks:
      - tibia
    ports:
      - 5001:80
    depends_on:
      migrate:
        condition: service_completed_successfully

  website:
    container_name: website
    image: ghcr.io/tibia-oce/website:latest
    ports:
      - 5002:80
    restart: unless-stopped
    env_file:
      - '.env'
    networks:
      - tibia
    depends_on:
      migrate:
        condition: service_completed_successfully

volumes:
  tibia:

networks:
  tibia:
    driver: bridge
