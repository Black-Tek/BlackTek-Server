name: Build - Docker

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "src/**"
      - "data/**"
  push:
    paths:
      - "src/**"
      - "data/**"
    branches:
      - main

jobs:
  docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            release_arch: release_64
          - platform: linux/arm64
            release_arch: release_arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest,network=host

      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: /bts/vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Login to GitHub Container Registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Restore Docker layer cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-cache-${{ runner.os }}-${{ matrix.platform }}-${{ hashFiles('Dockerfile', 'src/**') }}
          restore-keys: |
            docker-cache-${{ runner.os }}-${{ matrix.platform }}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ matrix.platform }}
          build-args: |
            RELEASE_ARCH=${{ matrix.release_arch }}
